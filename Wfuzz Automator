#!/bin/bash

echo "Welcome to the Wfuzz Vulnerability Assessment Tool"
echo "Please select the level of intensity:"
echo "1. COMMON"
echo "2. BIG"
echo "3. EXTENSIVE"
echo "4. HUGE"
echo "5. QUICK HIT"

while true; do
    read -p "Enter the number corresponding to your choice (1-5): " intensity
    if [[ $intensity =~ ^[1-5]$ ]]; then
        break
    else
        echo "Invalid input. Please enter a number between 1 and 5."
    fi
done

echo "Please enter the wordlist file path (e.g. /usr/share/dirb/wordlists/common.txt): "

while true; do
    read -p "Wordlist file path: " wordlist_file
    if [[ -f $wordlist_file ]]; then
        break
    else
        echo "Invalid file path. Please enter a valid path to the wordlist file."
    fi
done

echo "Please enter the status code to ignore (e.g. 404): "

while true; do
    read -p "Status code to ignore: " ignore_status
    if [[ $ignore_status =~ ^[0-9]+$ ]]; then
        break
    else
        echo "Invalid input. Please enter a valid status code (e.g. 404)."
    fi
done

read -p "Would you like to use a proxy? [y/n]: " use_proxy

if [[ $use_proxy =~ ^[yY]$ ]]; then
    echo "Please enter the proxy host and port (e.g. http://proxy.example.com:8080): "

    while true; do
        read -p "Proxy host and port: " proxy_host_port
        if [[ $proxy_host_port =~ ^https?://.*:[0-9]+$ ]]; then
            break
        else
            echo "Invalid input. Please enter a valid URL starting with http:// or https:// and a valid port number."
        fi
    done
fi

echo "Please enter the target hosts (e.g. http://example.com http://example.org): "

while read -a target_hosts; do
    for target_host in "${target_hosts[@]}"; do
        if [[ $target_host =~ ^https?://.* ]]; then
            if [[ $use_proxy =~ ^[yY]$ ]]; then
                case $intensity in
                    1)
                        echo "Scanning with common wordlist using proxy for $target_host..."
                        wfuzz -c -z file,$wordlist_file --hc $ignore_status --proxy $proxy_host_port $target_host/FUZZ > vulnerabilities.txt
                        ;;
                    2)
                        echo "Scanning with big wordlist using proxy for $target_host..."
                        wfuzz -c -z file,$wordlist_file --hc $ignore_status --proxy $proxy_host_port $target_host/FUZZ > vulnerabilities.txt
                        ;;
                    3)
                        echo "Scanning with extensive wordlist using proxy for $target_host..."
                        wfuzz -c -z file,$wordlist_file --hc $ignore_status --proxy $proxy_host_port $target_host/FUZZ > vulnerabilities.txt
                        ;;
                    4)
                        echo "Scanning with huge wordlist using proxy for $target_host..."
                        wfuzz -c -z file,$wordlist_file --hc $ignore_status --proxy $proxy_host_port $target_host/FUZZ > vulnerabilities.txt
                        ;;
                    5)
                        echo "Scanning with quick hit wordlist using proxy for $target_host..."
                        wfuzz -c -z file,$wordlist_file --hc $ignore_status --proxy $proxy_host_port $target_host/FUZZ > vulnerabilities.txt
                        ;;
esac
else
case $intensity in
1)
echo "Scanning with common wordlist for $target_host..."
wfuzz -c -z file,$wordlist_file --hc $ignore_status $target_host/FUZZ > vulnerabilities.txt
;;
2)
echo "Scanning with big wordlist for $target_host..."
wfuzz -c -z file,$wordlist_file --hc $ignore_status $target_host/FUZZ > vulnerabilities.txt
;;
3)
echo "Scanning with extensive wordlist for $target_host..."
wfuzz -c -z file,$wordlist_file --hc $ignore_status $target_host/FUZZ > vulnerabilities.txt
;;
4)
echo "Scanning with huge wordlist for $target_host..."
wfuzz -c -z file,$wordlist_file --hc $ignore_status $target_host/FUZZ > vulnerabilities.txt
;;
5)
echo "Scanning with quick hit wordlist for $target_host..."
wfuzz -c -z file,$wordlist_file --hc $ignore_status $target_host/FUZZ > vulnerabilities.txt
;;
esac
fi
else
echo "Invalid target host: $target_host. Please enter a valid URL starting with http:// or https://."
fi
done
read -p "Would you like to scan another set of target hosts? [y/n]: " scan_another

if [[ ! $scan_another =~ ^[yY]$ ]]; then
    break
fi

echo "Please enter the target hosts (e.g. http://example.com http://example.org): "
done

echo "Thank you for using the Wfuzz Vulnerability Assessment Tool. Vulnerabilities found have been written to vulnerabilities.txt."
